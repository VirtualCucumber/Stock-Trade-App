{"version":3,"sources":["components/Body/PageTitle.js","components/Body/Card.js","components/Body/Section.js","services/StockBackend/GraphData.js","components/Body/ListItem.js","pages/Dashboard/DashboardHome.js","components/Navbar/TopNavbar.js","components/Navbar/SideNavbar.js","components/Body/DashboardContent.js","components/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["PageTitle","props","state","title","className","this","React","Component","Card","bgStyle","icon","size","Section","children","GraphData","stock","timeFrame","limit","url","axios","get","then","response","data","ListItem","name","onClick","clickHandler","type","DashboardHome","getGraphData","setState","dashboardLoading","graphData","stockInput","i","time","length","moment","format","handleStockData","addComparedStockData","compareStockInput","comparedStockData","concat","console","log","compareIndex","dummyData","label","price","lineTension","borderColor","pointBackgroundColor","pointHitRadius","pointBorderWidth","fill","borderDash","pointRadius","pointHoverRadius","chartReference","chartInstance","config","datasets","push","update","renderCompareChart","ref","reference","height","labels","stockData","options","responsive","maintainAspectRatio","display","text","fontSize","legend","position","tooltips","mode","intersect","hover","comparedStocks","evt","target","value","index","dataset","filteredItems","slice","map","key","removeComparedlistItem","removeComparedStockData","onChange","updateStockInputValue","class","placeholder","aria-label","aria-describedby","Container","fluid","Row","Col","xl","md","currentPrice","updateInputValue","renderComparedStocks","TopNavbar","href","id","SideNavbar","DashboardContent","Main","overlay","sidebarOpen","handleViewSidebar","bind","sideBarClass","isOpen","exact","path","render","library","add","fab","faCheckSquare","faCoffee","faBars","faChartArea","faChartPie","faSearch","faPlus","faTimes","faDollarSign","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8eb9bd8b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass PageTitle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: 'Page Title'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"page-title\">\r\n                <h1 className=\"mt-4\">{this.props.title}</h1>\r\n                <ol className=\"breadcrumb mb-4\">\r\n                    <li className=\"breadcrumb-item active\">{this.props.title}</li>\r\n                </ol>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PageTitle;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Card extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bgStyle: 'bg-primary',\r\n            title: 'Title'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className={\"card text-white mb-4 \" + this.props.bgStyle}>\r\n                <div className=\"card-body\"><FontAwesomeIcon icon={this.props.icon} size='lg' /> {this.props.title}</div>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nfunction Section(props) {\r\n    return(\r\n        <div className=\"card mb-4\">\r\n            <div className=\"card-header\"><FontAwesomeIcon icon={props.icon} size='lg' /> {props.title}</div>\r\n            <div className=\"card-body card-grid\">\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Section;","import axios from 'axios';\r\nimport React from 'react';\r\nconst API_URL = 'https://two-guys-with-computers.herokuapp.com';\r\n\r\nclass GraphData extends React.Component {\r\n\r\n    /*async getGraphData() {\r\n        // Axios call to API\r\n        const url = `${API_URL}/stock_data`;\r\n        return axios.get(url).then(response => Response.data);\r\n    }*/\r\n\r\n    async getGraphData(stock, timeFrame, limit) {\r\n        \r\n        const url = `${API_URL}/stock/${stock}/${timeFrame}/${limit}`;\r\n        return axios.get(url).then(response => response.data);\r\n    }\r\n\r\n}\r\n\r\nexport default GraphData;","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default class ListItem extends Component {\r\n    render() {\r\n        return (\r\n            <li className={'list-item-card'}>\r\n                <h3 className='list-item-card-title'>{this.props.name}</h3>\r\n                <button onClick={this.props.clickHandler} className=\"btn btn-danger list-item-card-btn\" type=\"button\"><FontAwesomeIcon icon='times' /></button>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Container, Row, Col, Button, InputGroup, FormControl,  } from 'react-bootstrap';\r\nimport PageTitle from '../../components/Body/PageTitle';\r\nimport Card from '../../components/Body/Card';\r\nimport Section from '../../components/Body/Section';\r\nimport GraphData from '../../services/StockBackend/GraphData';\r\nimport moment from \"moment\";\r\nimport { Line, Pie, Bar } from 'react-chartjs-2';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport ListItem from '../../components/Body/ListItem';\r\nimport ReactLoading from 'react-loading';\r\n\r\nclass DashboardHome extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            comparedStockData: [],\r\n            dashboardLoading: true,\r\n            chartReference: {},\r\n            stockInput: '',\r\n            compareStockInput: '',\r\n            comparedStocks: []\r\n        }\r\n\r\n        this.graphData = new GraphData();\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.stockData.name);\r\n    }\r\n\r\n    getGraphData = () => {\r\n        this.setState({dashboardLoading: true});\r\n\r\n        this.graphData.getGraphData(this.state.stockInput, 'day', 10).then(response => {  \r\n            for (let i = 0; i < response.time.length; i++) {\r\n                response.time[i] = moment(response.time[i]).format('dddd');\r\n            }  \r\n            this.props.handleStockData(response);\r\n        });\r\n\r\n        this.setState({dashboardLoading: false})\r\n    }\r\n\r\n    updateInputValue(evt) {\r\n        this.setState({\r\n            compareStockInput: evt.target.value\r\n        });\r\n    }\r\n\r\n    updateStockInputValue(evt) {\r\n        this.setState({\r\n            stockInput: evt.target.value\r\n        });\r\n    }\r\n\r\n    addComparedStockData = () => {\r\n        this.graphData.getGraphData(this.state.compareStockInput, 'day', 10).then(response => {  \r\n            for (let i = 0; i < response.time.length; i++) {\r\n                response.time[i] = moment(response.time[i]).format('dddd');\r\n            }  \r\n            \r\n        this.setState({\r\n            comparedStockData: this.state.comparedStockData.concat(response)\r\n        });\r\n\r\n        console.log(this.state.comparedStockData);\r\n\r\n        let compareIndex = this.state.comparedStockData.length;\r\n\r\n        let dummyData = {\r\n            label:this.state.comparedStockData[compareIndex-1].name,\r\n            data:this.state.comparedStockData[compareIndex-1].price,\r\n            lineTension: 0,\r\n            borderColor: \"rgb(255, 99, 132)\",\r\n            pointBackgroundColor: \"rgb(255, 99, 132)\",\r\n            pointHitRadius: 50,\r\n            pointBorderWidth: 2,\r\n            fill: false,\r\n            borderDash: [5, 5],\r\n            pointRadius: 5,\r\n            pointHoverRadius: 10,\r\n        }\r\n\r\n        this.chartReference.chartInstance.config.data.datasets.push(dummyData);\r\n\r\n        this.chartReference.chartInstance.update();\r\n\r\n    });\r\n\r\n    }\r\n\r\n    removeComparedStockData(index) {\r\n        let dataset = this.chartReference.chartInstance.config.data.datasets;\r\n        const filteredItems = dataset.slice(0, index+1).concat(dataset.slice(index + 2, dataset.length));\r\n        this.chartReference.chartInstance.config.data.datasets = filteredItems;\r\n        this.chartReference.chartInstance.update();\r\n    }\r\n\r\n    renderCompareChart = () => {\r\n\r\n        return (\r\n            <Line ref={(reference) => this.chartReference = reference }\r\n                height={300}\r\n                data={{\r\n                    labels:this.props.stockData.time,\r\n                    datasets: [\r\n                        {\r\n                            label:this.props.stockData.name,\r\n                            data:this.props.stockData.price,\r\n                            lineTension: 0,\r\n                            borderColor: \"rgb(255, 99, 132)\",\r\n                            pointBackgroundColor: \"rgb(255, 99, 132)\",\r\n                            pointHitRadius: 50,\r\n                            pointBorderWidth: 2,\r\n                            fill: false,\r\n                            borderDash: [5, 5],\r\n                            pointRadius: 5,\r\n                            pointHoverRadius: 10,\r\n                        }\r\n                    ]\r\n                }}\r\n                options={{\r\n                    responsive:true,\r\n                    maintainAspectRatio:false,\r\n                    title:{\r\n                        display:false,\r\n                        text:'Apple',\r\n                        fontSize:25\r\n                        },\r\n                        legend:{\r\n                        display:false,\r\n                        position:'right'\r\n                        },\r\n                        tooltips: {\r\n                        mode: 'index',\r\n                        intersect: false,\r\n                        },\r\n                        hover: {\r\n                            mode: 'nearest',\r\n                            intersect: true\r\n                        }\r\n                }}\r\n            />\r\n        )\r\n    }\r\n\r\n    renderComparedStocks() {\r\n        return this.state.comparedStockData.map((comparedStocks, index) => {\r\n            return(\r\n                <ListItem key={index}\r\n                name={comparedStocks.name}\r\n                index={index}\r\n                clickHandler={() =>this.removeComparedlistItem(index)}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    removeComparedlistItem(index) { \r\n        this.removeComparedStockData(index);\r\n        const filteredItems = this.state.comparedStockData.slice(0, index).concat(this.state.comparedStockData.slice(index + 1, this.state.comparedStockData.length));\r\n        this.setState({comparedStockData: filteredItems})\r\n    }\r\n\r\n    render() {\r\n        if(typeof this.props.stockData.name == 'undefined') {\r\n            return (\r\n                <div className='blank'>\r\n                    <form className=\"d-none d-md-inline-block form-inline m-auto\">\r\n                        <div className=\"input-group\">\r\n                            <input value={this.state.stockInput} onChange={evt => this.updateStockInputValue(evt)} class=\"form-control\" type=\"text\" placeholder=\"Stock to check...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\r\n                            <div className=\"input-group-append\">\r\n                                <button onClick={this.getGraphData} className=\"btn btn-primary\" type=\"button\"><i class=\"fas fa-search\"></i><FontAwesomeIcon icon='search' /></button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <Container fluid='true'>\r\n                    <PageTitle title={this.props.stockData.name} />\r\n                    <Row>\r\n                        <Col xl={3} md={6}>\r\n                            <Card title={this.props.stockData.currentPrice} icon='dollar-sign' bgStyle='bg-primary'/>\r\n                        </Col>\r\n                        <Col xl={3} md={6}>\r\n                            <Card title='Stock price difference from last year' bgStyle='bg-warning'/>\r\n                        </Col>\r\n                        <Col xl={3} md={6}>\r\n                            <Card title='Stock rank with other companies' bgStyle='bg-success'/>\r\n                        </Col>\r\n                        <Col xl={3} md={6}>\r\n                            <Card title='Google trend data of stock' bgStyle='bg-danger'/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                    <Col xl={12}>\r\n                            <Section title='Chart' icon='chart-area'>\r\n                                <div>\r\n                                    {this.renderCompareChart()}\r\n                                </div>\r\n                            <form className=\"d-none d-md-inline-block form-inline m-auto\">\r\n                                <div className=\"input-group\">\r\n                                    <input value={this.state.compareStockInput} onChange={evt => this.updateInputValue(evt)} class=\"form-control\" type=\"text\" placeholder=\"Compare stock...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\r\n                                    <div className=\"input-group-append\">\r\n                                        <button onClick={this.addComparedStockData} className=\"btn btn-success\" type=\"button\"><i class=\"fas fa-search\"></i><FontAwesomeIcon icon='plus' /></button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                            {this.renderComparedStocks()}\r\n                            </Section>\r\n                            \r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default DashboardHome;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport GraphData from '../../services/StockBackend/GraphData';\r\nimport moment from \"moment\";\r\n\r\nclass TopNavbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            stockInput: ''\r\n        }\r\n\r\n        this.graphData = new GraphData();\r\n    }\r\n\r\n    updateInputValue(evt) {\r\n        this.setState({\r\n            stockInput: evt.target.value\r\n        });\r\n    }\r\n\r\n    getGraphData = () => {\r\n        this.graphData.getGraphData(this.state.stockInput, 'day', 10).then(response => {  \r\n            for (let i = 0; i < response.time.length; i++) {\r\n                response.time[i] = moment(response.time[i]).format('dddd');\r\n            }  \r\n            this.props.handleStockData(response);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"sb-topnav navbar navbar-expand navbar-dark bg-dark\">\r\n                <a className=\"navbar-brand\" href=\"index.html\">Stock Trading App</a><button className=\"btn btn-link btn-sm order-1 order-lg-0\" id=\"sidebarToggle\" onClick={this.props.onClick} href=\"#\"><FontAwesomeIcon icon='bars' size='lg' /></button\r\n                >\r\n                <form className=\"d-none d-md-inline-block form-inline ml-auto mr-0 mr-md-3 my-2 my-md-0\">\r\n                    <div className=\"input-group\">\r\n                        <input value={this.state.stockInput} onChange={evt => this.updateInputValue(evt)} class=\"form-control\" type=\"text\" placeholder=\"Change stock...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\r\n                        <div className=\"input-group-append\">\r\n                            <button onClick={this.getGraphData} className=\"btn btn-primary\" type=\"button\"><i class=\"fas fa-search\"></i><FontAwesomeIcon icon='search' /></button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopNavbar;","import React from 'react';\r\n\r\nclass SideNavbar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id=\"layoutSidenav_nav\">\r\n                <nav className=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\">\r\n                    <div className=\"sb-sidenav-menu\">\r\n                        <div className=\"nav\">\r\n                            <div className=\"sb-sidenav-menu-heading\">Core</div>\r\n                            <a className=\"nav-link\" href=\"index.html\"\r\n                                ><div className=\"sb-nav-link-icon\"><i className=\"fas fa-tachometer-alt\"></i></div>\r\n                                Dashboard</a\r\n                            >\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideNavbar;\r\n","import React from 'react';\r\n\r\nfunction DashboardContent() {\r\n    return(\r\n              <main>\r\n                  <div className=\"container-fluid\">\r\n                      <h1 className=\"mt-4\">Dashboard</h1>\r\n                      <ol className=\"breadcrumb mb-4\">\r\n                          <li className=\"breadcrumb-item active\">Dashboard</li>\r\n                      </ol>\r\n                      <div className=\"row\">\r\n                          <div className=\"col-xl-3 col-md-6\">\r\n                              <div className=\"card bg-primary text-white mb-4\">\r\n                                  <div className=\"card-body\">Primary Card</div>\r\n                                  <div className=\"card-footer d-flex align-items-center justify-content-between\">\r\n                                      <a className=\"small text-white stretched-link\" href=\"#\">View Details</a>\r\n                                      <div className=\"small text-white\"><i className=\"fas fa-angle-right\"></i></div>\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n                          <div className=\"col-xl-3 col-md-6\">\r\n                              <div className=\"card bg-warning text-white mb-4\">\r\n                                  <div className=\"card-body\">Warning Card</div>\r\n                                  <div className=\"card-footer d-flex align-items-center justify-content-between\">\r\n                                      <a className=\"small text-white stretched-link\" href=\"#\">View Details</a>\r\n                                      <div className=\"small text-white\"><i className=\"fas fa-angle-right\"></i></div>\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n                          <div className=\"col-xl-3 col-md-6\">\r\n                              <div className=\"card bg-success text-white mb-4\">\r\n                                  <div className=\"card-body\">Success Card</div>\r\n                                  <div className=\"card-footer d-flex align-items-center justify-content-between\">\r\n                                      <a className=\"small text-white stretched-link\" href=\"#\">View Details</a>\r\n                                      <div className=\"small text-white\"><i className=\"fas fa-angle-right\"></i></div>\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n                          <div className=\"col-xl-3 col-md-6\">\r\n                              <div className=\"card bg-danger text-white mb-4\">\r\n                                  <div className=\"card-body\">Danger Card</div>\r\n                                  <div className=\"card-footer d-flex align-items-center justify-content-between\">\r\n                                      <a className=\"small text-white stretched-link\" href=\"#\">View Details</a>\r\n                                      <div className=\"small text-white\"><i className=\"fas fa-angle-right\"></i></div>\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                          <div className=\"col-xl-6\">\r\n                              <div className=\"card mb-4\">\r\n                                  <div className=\"card-header\"><i className=\"fas fa-chart-area mr-1\"></i>Area Chart Example</div>\r\n                                  <div className=\"card-body\"><canvas id=\"myAreaChart\" width=\"100%\" height=\"40\"></canvas></div>\r\n                              </div>\r\n                          </div>\r\n                          <div className=\"col-xl-6\">\r\n                              <div className=\"card mb-4\">\r\n                                  <div className=\"card-header\"><i className=\"fas fa-chart-bar mr-1\"></i>Bar Chart Example</div>\r\n                                  <div className=\"card-body\"><canvas id=\"myBarChart\" width=\"100%\" height=\"40\"></canvas></div>\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </main>\r\n    )\r\n}\r\n\r\nexport default DashboardContent;","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport DashboardHome from \"../../pages/Dashboard/DashboardHome\";\r\nimport TopNavbar from '../../components/Navbar/TopNavbar';\r\nimport SideNavbar from '../../components/Navbar/SideNavbar';\r\nimport DashboardContent from '../../components/Body/DashboardContent';\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            overlay: true,\r\n            sidebarOpen: false,\r\n            stockData: {\r\n                    price:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n                    time:['0','0','0','0','0','0','0','0','0','0']\r\n            }\r\n        }\r\n\r\n        this.handleViewSidebar = this.handleViewSidebar.bind(this);\r\n    }\r\n\r\n    handleViewSidebar() {\r\n        this.setState({sidebarOpen: !this.state.sidebarOpen});\r\n        console.log(this.state.sidebarOpen);\r\n    }\r\n\r\n    handleStockData = (data) => {\r\n        this.setState({\r\n            stockData: data\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let sideBarClass = this.state.sidebarOpen ? \"sb-nav-fixed sb-sidenav-toggled\" : \"sb-nav-fixed\";\r\n        return (\r\n            <div className={sideBarClass}>\r\n                <main>\r\n                    <TopNavbar handleStockData={this.handleStockData} onClick={this.handleViewSidebar} />\r\n                    <div id=\"layoutSidenav\">\r\n                        <SideNavbar isOpen={this.state.sidebarOpen} />\r\n                        <div id=\"layoutSidenav_content\">\r\n                            <Route \r\n                            exact path=\"/\"\r\n                            render={props => (\r\n                                <DashboardHome {...props} handleStockData={this.handleStockData} stockData={this.state.stockData} />\r\n                            )}\r\n                            />  \r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport Main from './components/Main/Main'\nimport './App.css';\nimport './css/styles.css';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faCheckSquare, faCoffee , faBars, faChartArea, faChartPie, faSearch, faPlus, faTimes, faDollarSign} from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(fab, faCheckSquare, faCoffee, faBars, faChartArea, faChartPie, faSearch, faPlus, faTimes, faDollarSign);\n\nfunction App() {\n  return (\n      <Main />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n        <Router> \n        <App /> \n        </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}